#include "WrongAnimal.hpp"

WrongAnimal::WrongAnimal() : type("Imposter Amougus") {
	std::cout << "WrongAnimal's Default Constructor Called!" << std::endl;
}

WrongAnimal::WrongAnimal(const WrongAnimal& Wronganimal) {
	std::cout << "WrongAnimal's Copy Constructor Called!" << std::endl;
	*this = Wronganimal;
}

WrongAnimal&	WrongAnimal::operator=(const WrongAnimal& Wronganimal) {
	std::cout << "WrongAnimal's Assignment Operator Overload Called!" << std::endl;
	if (this != &Wronganimal)
		this->type = Wronganimal.type;
	return (*this);
}

WrongAnimal::~WrongAnimal() {
	std::cout << "WrongAnimal's Default Destructor Called!" << std::endl;
}

void	WrongAnimal::makeSound() const {
	std::cout << "⣿⣿⣿⡿⣏⣯⢽⣿⣿⣿⣻⣿⣿⣿⣿⣟⣯⣿⣿⣿⣿⢯⣻⣝⣯⡿⠿⠟⠛⠛⠉⠉⠛⠛⠛⠛⠿⢿⣿⣿⣏⠷⠉⢍⡛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣟⡾⣟⣿⣿⣿⣿⣿⣿\n⡛⠿⣿⣿⣽⡞⣯⣿⣿⣿⣿⡿⣯⣷⡻⣿⢯⡟⣽⣿⣿⡿⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⢮⡐⢮⡵⣻⣿⣿⣟⣷⣻⣿⣿⣿⣿⡛⢮⣳⡽⣼⣻⣿⣿⣻⣽\n⡽⡆⠘⢿⣷⢿⣽⣿⡿⣿⡳⣏⠷⣭⢳⡿⣯⣟⡽⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠝⠻⣷⣿⣿⣷⢿⣿⢿⣳⣿⣯⣷⣝⢦⡳⣽⣻⣿⣿⣿⣿⢾\n⣟⡥⠀⠈⢿⡿⣾⣿⣻⢷⣻⣭⠿⣜⢧⣿⡿⠯⣀⣀⣄⣀⣀⣀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⡃⠀⣴⠀⠀⠀⠀⠀⠀⠀⢈⠻⣿⣾⣿⣻⣿⡿⣿⣽⣾⣿⣿⣿⣷⣿⣿⣿⣷⣿⣿\n⣿⠁⠀⠀⠈⣿⢳⣿⣽⣯⣷⡏⡟⡎⢻⣿⣶⣿⣿⣿⣿⣿⣿⣾⣿⣾⣷⣶⣾⣷⣾⣷⡄⠀⡇⠀⢸⣧⠀⢠⣤⠀⠀⠀⠀⠀⠈⢻⣷⣿⣿⣽⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⢻\n⣤⢎⡄⠄⠀⠘⢻⣷⣟⣾⡱⣏⣷⣽⣿⣿⣛⣏⢟⡱⣛⠿⢏⠻⠿⠿⢿⠿⡿⣿⣿⠟⠃⢰⠁⠀⢸⣿⣿⣿⣿⣿⣷⣶⣾⣤⣾⣯⣾⣿⢻⣿⣳⢯⣷⣿⣿⣿⣿⣿⣿⠗⠉⠉⢿\n⣿⣻⣞⣧⣄⡀⠀⠈⠻⣾⡽⣾⣿⣽⣟⢧⡻⣜⣮⣳⣭⣞⣼⣧⣞⡵⣺⣜⣲⢤⡀⠄⠀⠀⠀⠀⠘⣿⣯⠙⡛⢻⣿⠛⡿⠿⠿⡿⣿⣿⣿⣿⣿⣻⣾⢿⡿⣿⣿⣿⢃⠆⠀⡄⠀\n⣿⡿⣿⣳⡿⣿⣷⣦⡀⠀⠹⢻⣿⣻⢮⣷⡻⣽⣺⣭⣙⣬⣉⣬⢉⠛⠷⣯⣟⣾⡱⡌⢰⠀⠀⠀⠈⢿⣿⡘⣌⠳⡜⣿⡹⢾⣄⡀⠀⠀⠉⠙⣿⣿⣞⣯⢿⣵⠟⣡⠞⠀⡘⢀⠂\n⣿⣻⣿⢿⣽⣷⣿⣟⣿⡙⢦⣿⢷⣯⢟⣶⣿⠟⠉⢀⣤⣴⣤⣌⠉⠳⣌⠙⣿⣞⠷⣍⠻⠀⠀⠀⠀⠈⣿⠰⣬⠳⣙⠦⣙⣉⣛⠻⠓⠠⠄⡀⠈⠙⣿⡾⠛⡡⢞⡵⣫⢆⡄⠁⠀\n⣿⣳⢿⣟⣿⣯⢿⣿⢩⢉⣾⢯⣿⣚⣿⣿⣯⢿⣒⣿⣿⣿⣏⣿⡆⠀⢹⣦⣼⣯⡛⠀⠈⠀⠀⠀⠀⠀⠙⣿⢐⣣⡷⠋⢉⣩⣍⡉⠛⠶⣖⡲⠀⠀⢻⠀⢀⢧⡻⣜⢧⡟⣞⡳⢦\n⣿⣽⢾⣹⡞⣽⣫⣿⠈⠈⢃⠮⣹⣷⡎⢿⣿⣿⡼⣿⣿⣟⣿⡿⠁⣠⢾⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⣿⣿⢰⣿⣿⣿⣻⣧⠀⠘⣷⠉⠀⢸⣤⠿⣋⠕⡠⢆⡜⣦⡝⡦\n⣿⣾⣟⣷⣿⣧⣷⠃⠀⠀⠀⠈⠀⠙⠻⣷⣬⣙⠻⢿⣿⣿⣷⣤⣾⠵⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⢿⣿⠏⠀⢀⣿⠂⠀⢸⡏⡴⣡⢞⡱⣏⡞⠶⣙⢒\n⣿⢿⣿⣻⣯⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠙⠉⠉⠁⠀⣀⠀⣀⠦⣑⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣿⣿⣿⣭⣴⠶⠛⠁⠀⠀⠘⣿⠶⡽⣞⣝⡲⢭⠳⣍⢮\n⣿⣻⣞⡷⣽⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⢋⠶⣩⢞⡱⡌⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠓⠒⠴⠒⠀⠀⠀⠀⠀⢹⣟⡳⣍⠶⣙⢮⠹⠘⠃\n⣿⢿⡿⣿⣿⠀⠀⠀⠀⡀⢀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⡸⣟⡼⣣⢟⣧⢻⡘⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢧⡘⠿⡘⢄⠃⠀⠀\n⣿⣯⢿⣻⠇⠀⠀⠀⠤⡑⢢⠠⠀⠀⠀⠀⠀⡀⢤⣻⣿⣳⡽⣮⣷⣯⢿⣜⢧⣛⢤⡁⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣆⠀⠀⠀⠀⠀⠀⠀⠀⠸⡆⠉⠂⠁⠀⠀⠀⠀\n⣿⣯⣿⡟⠀⠀⠠⡘⢤⡙⣄⠣⡑⠤⢂⠌⡰⣘⠶⣹⢽⣷⣻⣿⣿⣿⣿⣾⣿⡜⣧⡹⢆⠦⣤⢠⣀⣀⠀⠀⠀⢀⣠⣤⣤⡀⠀⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀\n⣿⣳⣟⠃⠀⣀⠣⡜⢢⠱⣌⠳⣘⠤⣃⠞⣱⡜⣭⢣⢏⡼⢳⢏⣮⢳⢏⡿⣹⢿⣷⣿⣭⠷⣎⠷⣮⢵⣫⠝⡿⢿⡿⢿⣿⡣⠀⠒⡀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡆⠀⡀⡀⢀⠀⡀\n⣿⣳⡟⠀⡐⢄⠳⢌⢣⠓⣌⠳⣌⢣⠝⢮⡑⢞⡰⢃⠎⣜⡡⢞⡰⢋⢞⡸⢥⢫⠝⡭⣛⠟⣏⠻⠉⠋⠀⠀⡀⠀⠀⠀⠀⠀⠀⠈⠔⡀⠀⠀⠀⠀⠀⠀⠀⠀⣷⢢⡱⢤⣣⠾⣴" << std::endl;
}

std::string	WrongAnimal::getType() const {
	return(this->type);
}
